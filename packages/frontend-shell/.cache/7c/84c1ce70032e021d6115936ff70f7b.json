{"id":"../../../node_modules/tsrux/dist/mapReducers.js","dependencies":[{"name":"/Users/mac/Desktop/Kaam/next-test/piral-core-redux-saga-demo/packages/frontend-shell/package.json","includedInParent":true,"mtime":1612783078267},{"name":"/Users/mac/Desktop/Kaam/next-test/piral-core-redux-saga-demo/node_modules/tsrux/package.json","includedInParent":true,"mtime":1612783277144},{"name":"/Users/mac/Desktop/Kaam/next-test/piral-core-redux-saga-demo/node_modules/tsrux/.browserslistrc","includedInParent":true,"mtime":1612783277390}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapReducers = mapReducers;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Creates a reducer, which is capable of infering the type of action for each reducer based on the action-creators.\n *\n * @param defaultState  The initial state value\n * @param setup         This function is used to set up the contained reducers.\n */\nfunction mapReducers(defaultState, setup) {\n  var map = Object.assign.apply(Object, [{}].concat(_toConsumableArray(setup(function (actionCreator, reducer) {\n    return _defineProperty({}, actionCreator.type, reducer);\n  })))); // eslint-disable-next-line @typescript-eslint/default-param-last\n\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    var reducer = map[action.type];\n    return reducer ? reducer(state, action) : state;\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":22,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":1,"column":0}},{"generated":{"line":23,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":2,"column":0}},{"generated":{"line":24,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":3,"column":0}},{"generated":{"line":25,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":4,"column":0}},{"generated":{"line":26,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":5,"column":0}},{"generated":{"line":27,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":6,"column":0}},{"generated":{"line":28,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":7,"column":7}},{"name":"mapReducers","generated":{"line":28,"column":9},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":7,"column":16}},{"generated":{"line":28,"column":20},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":7,"column":7}},{"name":"defaultState","generated":{"line":28,"column":21},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":7,"column":28}},{"generated":{"line":28,"column":33},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":7,"column":7}},{"name":"setup","generated":{"line":28,"column":35},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":7,"column":42}},{"generated":{"line":28,"column":40},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":7,"column":7}},{"generated":{"line":28,"column":42},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":7,"column":49}},{"generated":{"line":29,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":4}},{"name":"map","generated":{"line":29,"column":6},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":10}},{"generated":{"line":29,"column":9},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":13}},{"name":"Object","generated":{"line":29,"column":12},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":16}},{"generated":{"line":29,"column":18},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":22}},{"name":"assign","generated":{"line":29,"column":19},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":23}},{"generated":{"line":29,"column":25},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":16}},{"name":"Object","generated":{"line":29,"column":32},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":16}},{"generated":{"line":29,"column":38},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":22}},{"generated":{"line":29,"column":41},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":30}},{"generated":{"line":29,"column":43},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":22}},{"name":"setup","generated":{"line":29,"column":71},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":37}},{"generated":{"line":29,"column":76},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":42}},{"generated":{"line":29,"column":77},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":43}},{"name":"actionCreator","generated":{"line":29,"column":87},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":44}},{"generated":{"line":29,"column":100},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":43}},{"name":"reducer","generated":{"line":29,"column":102},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":59}},{"generated":{"line":29,"column":109},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":43}},{"generated":{"line":30,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":43}},{"name":"actionCreator","generated":{"line":30,"column":31},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":75}},{"generated":{"line":30,"column":44},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":88}},{"name":"type","generated":{"line":30,"column":45},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":89}},{"generated":{"line":30,"column":49},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":43}},{"name":"reducer","generated":{"line":30,"column":51},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":96}},{"generated":{"line":30,"column":58},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":43}},{"generated":{"line":31,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":43}},{"generated":{"line":31,"column":3},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":42}},{"generated":{"line":31,"column":4},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":22}},{"generated":{"line":31,"column":7},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":8,"column":4}},{"generated":{"line":31,"column":8},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":7,"column":49}},{"generated":{"line":31,"column":9},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":9,"column":4}},{"generated":{"line":33,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":4}},{"generated":{"line":33,"column":9},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":11}},{"generated":{"line":33,"column":21},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":45}},{"generated":{"line":34,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":45}},{"name":"state","generated":{"line":34,"column":8},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":12}},{"generated":{"line":34,"column":13},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":45}},{"name":"defaultState","generated":{"line":34,"column":84},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":20}},{"generated":{"line":34,"column":96},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":45}},{"generated":{"line":35,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":45}},{"name":"action","generated":{"line":35,"column":8},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":34}},{"generated":{"line":35,"column":14},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":45}},{"generated":{"line":36,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":8}},{"name":"reducer","generated":{"line":36,"column":8},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":14}},{"generated":{"line":36,"column":15},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":21}},{"name":"map","generated":{"line":36,"column":18},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":24}},{"generated":{"line":36,"column":21},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":27}},{"name":"action","generated":{"line":36,"column":22},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":28}},{"generated":{"line":36,"column":28},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":34}},{"name":"type","generated":{"line":36,"column":29},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":35}},{"generated":{"line":36,"column":33},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":27}},{"generated":{"line":36,"column":34},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":11,"column":8}},{"generated":{"line":37,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":8}},{"name":"reducer","generated":{"line":37,"column":11},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":15}},{"generated":{"line":37,"column":18},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":22}},{"name":"reducer","generated":{"line":37,"column":21},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":25}},{"generated":{"line":37,"column":28},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":32}},{"name":"state","generated":{"line":37,"column":29},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":33}},{"generated":{"line":37,"column":34},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":32}},{"name":"action","generated":{"line":37,"column":36},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":40}},{"generated":{"line":37,"column":42},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":32}},{"generated":{"line":37,"column":43},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":22}},{"name":"state","generated":{"line":37,"column":46},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":50}},{"generated":{"line":37,"column":51},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":12,"column":8}},{"generated":{"line":38,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":13,"column":5}},{"generated":{"line":38,"column":3},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":10,"column":4}},{"generated":{"line":39,"column":0},"source":"../../../node_modules/tsrux/dist/mapReducers.js","original":{"line":14,"column":1}}],"sources":{"../../../node_modules/tsrux/dist/mapReducers.js":"/**\n * Creates a reducer, which is capable of infering the type of action for each reducer based on the action-creators.\n *\n * @param defaultState  The initial state value\n * @param setup         This function is used to set up the contained reducers.\n */\nexport function mapReducers(defaultState, setup) {\n    const map = Object.assign({}, ...setup((actionCreator, reducer) => ({ [actionCreator.type]: reducer })));\n    // eslint-disable-next-line @typescript-eslint/default-param-last\n    return (state = defaultState, action) => {\n        const reducer = map[action.type];\n        return reducer ? reducer(state, action) : state;\n    };\n}\n"},"lineCount":null}},"error":null,"hash":"870e6613c3c9892652e506ff14c60a4b","cacheData":{"env":{}}}