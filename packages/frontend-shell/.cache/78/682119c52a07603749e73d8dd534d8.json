{"id":"W8Md","dependencies":[{"name":"/Users/mac/Desktop/Kaam/next-test/piral-core-redux-saga-demo/packages/frontend-shell/tsconfig.json","includedInParent":true,"mtime":1612782557045},{"name":"/Users/mac/Desktop/Kaam/next-test/piral-core-redux-saga-demo/packages/frontend-shell/package.json","includedInParent":true,"mtime":1612783078267},{"name":"tsrux","loc":{"line":1,"column":30},"parent":"/Users/mac/Desktop/Kaam/next-test/piral-core-redux-saga-demo/packages/frontend-shell/src/redux/pilets/actions.ts","resolved":"/Users/mac/Desktop/Kaam/next-test/piral-core-redux-saga-demo/node_modules/tsrux/dist/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchPilets = exports.unloadPilet = void 0;\n\nvar _tsrux = require(\"tsrux\");\n\n// Gets dispatched when a pilet gets injected (updated).\n// Can be used to reset state before a second setup call.\nvar unloadPilet = (0, _tsrux.actionCreator)('SHELL/PILETS/UNLOAD', function (name) {\n  return {\n    name: name\n  };\n});\nexports.unloadPilet = unloadPilet;\nvar fetchPilets = {\n  start: (0, _tsrux.actionCreator)('SHELL/PILET/FETCH_START'),\n  failure: (0, _tsrux.actionCreator)('SHELL/PILET/FETCH_FAILURE'),\n  success: (0, _tsrux.actionCreator)('SHELL/PILET/FETCH_SUCCESS', function (pilets) {\n    return {\n      pilets: pilets\n    };\n  })\n};\nexports.fetchPilets = fetchPilets;"},"sourceMaps":{"js":{"mappings":[{"source":"redux/pilets/actions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":7},"generated":{"line":12,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":12,"column":4}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":24},"generated":{"line":12,"column":15}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":27},"generated":{"line":12,"column":18}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":41},"generated":{"line":12,"column":44}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":27},"generated":{"line":12,"column":65}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":64},"generated":{"line":12,"column":67}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":65},"generated":{"line":12,"column":77}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":64},"generated":{"line":12,"column":81}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":64},"generated":{"line":13,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":83},"generated":{"line":13,"column":9}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":14,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":14,"column":4}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":14,"column":8}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":14,"column":10}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":83},"generated":{"line":15,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":64},"generated":{"line":15,"column":3}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":64},"generated":{"line":16,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":27},"generated":{"line":16,"column":1}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":6,"column":7},"generated":{"line":16,"column":2}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":18,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":18,"column":4}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":10,"column":24},"generated":{"line":18,"column":15}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":10,"column":27},"generated":{"line":18,"column":18}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":19,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":19,"column":2}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":19,"column":7}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":19,"column":9}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":19,"column":35}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":19,"column":60}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":10,"column":27},"generated":{"line":19,"column":61}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":20,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":20,"column":2}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":12,"column":11},"generated":{"line":20,"column":9}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":20,"column":11}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":12,"column":27},"generated":{"line":20,"column":37}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":20,"column":64}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":10,"column":27},"generated":{"line":20,"column":65}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":21,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":21,"column":2}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":21,"column":9}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":21,"column":11}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":27},"generated":{"line":21,"column":37}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":21,"column":64}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":56},"generated":{"line":21,"column":66}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":57},"generated":{"line":21,"column":76}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":56},"generated":{"line":21,"column":82}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":56},"generated":{"line":22,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":86},"generated":{"line":22,"column":11}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":23,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":23,"column":6}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":23,"column":12}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":23,"column":14}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":86},"generated":{"line":24,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":56},"generated":{"line":24,"column":5}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":56},"generated":{"line":25,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":25,"column":3}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":10,"column":27},"generated":{"line":26,"column":0}},{"source":"redux/pilets/actions.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":26,"column":1}}],"sources":{"redux/pilets/actions.ts":"import { actionCreator } from 'tsrux';\nimport { PiletMetadata } from 'piral-core';\n\n// Gets dispatched when a pilet gets injected (updated).\n// Can be used to reset state before a second setup call.\nexport const unloadPilet = actionCreator('SHELL/PILETS/UNLOAD', (name: string) => ({\n    name,\n}));\n\nexport const fetchPilets = {\n    start: actionCreator('SHELL/PILET/FETCH_START'),\n    failure: actionCreator('SHELL/PILET/FETCH_FAILURE'),\n    success: actionCreator('SHELL/PILET/FETCH_SUCCESS', (pilets: PiletMetadata[]) => ({\n        pilets,\n    })),\n};\n"},"lineCount":null}},"error":null,"hash":"673d8f632af6696a947e3eb205cacb5d","cacheData":{"env":{}}}